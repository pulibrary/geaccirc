# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/music_reserves', type: :request do
  # MusicReserve. As you add validations to MusicReserve, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    { course_no: 'course one', rec_title: 'title', call_no: 'call number', composer: 'composer', file_name: 'file',
      file_note: 'note' }
  end

  describe 'GET /index' do
    it 'renders a successful response' do
      MusicReserve.create! valid_attributes
      get music_reserves_url
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    it 'renders a successful response' do
      music_reserve = MusicReserve.create! valid_attributes
      get music_reserve_url(music_reserve)
      expect(response).to be_successful
    end
  end
end
